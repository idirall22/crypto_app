name: deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  GKE_CLUSTER: cryptoapp  
  GKE_ZONE: europe-west3-a
  
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: cryptoapp
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate
    - name: Run migrations
      run: make migrate
      working-directory: account

    - name: Test adapters
      run: make test_adapters
      working-directory: account

    - name: Test service
      run: make test_service
      working-directory: account

    - name: Test port
      run: make test_port
      working-directory: account

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
    
    - run: |-
        gcloud --quiet auth configure-docker
    
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
        
    - name: Build account container 
      run: docker build -f account/Dockerfile -t gcr.io/${{ secrets.GKE_PROJECT }}/account .
      working-directory: .
    
    - name: Build notify container
      run: docker build -f notify/Dockerfile -t gcr.io/${{ secrets.GKE_PROJECT }}/notify .
      working-directory: .

        
    - name: push account container to gcp
      run: docker push "gcr.io/${{ secrets.GKE_PROJECT }}/account"
    
    - name: push notify container to gcp
      run: docker push "gcr.io/${{ secrets.GKE_PROJECT }}/notify"   
        
    # - name: deply to k8s
    #   run: |-
    #     kubectl apply -f k8s/
    #     kubectl set image deployments/account-deployment account=gcr.io/${{ secrets.GKE_PROJECT }}/account
    #     kubectl set image deployments/notify-deployment notify=gcr.io/${{ secrets.GKE_PROJECT }}/notify