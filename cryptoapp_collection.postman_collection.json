{
	"info": {
		"_postman_id": "087f47f8-0e1e-4ed5-94bc-adc7876d05d1",
		"name": "cryptoapp_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "account",
			"item": [
				{
					"name": "/account/register user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json(); ",
									"if (body.confirmation_link != undefined){",
									"    pm.environment.set(\"confirmation_user1\", body.confirmation_link)",
									"    console.log(pm.environment.get(\"confirmation_user1\"))",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"bob@email.com\",\n    \"first_name\": \"bob\",\n    \"last_name\": \"crypto\",\n    \"password\": \"123456789\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"register"
							]
						},
						"description": "register new user"
					},
					"response": [
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "register user response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/register user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json(); ",
									"if (body.confirmation_link != undefined){",
									"    pm.environment.set(\"confirmation_user2\", body.confirmation_link)",
									"    console.log(pm.environment.get(\"confirmation_user2\"))",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"alice@email.com\",\n    \"first_name\": \"alice\",\n    \"last_name\": \"crypto\",\n    \"password\": \"123456789\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"register"
							]
						},
						"description": "register new user"
					},
					"response": [
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "register user response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/login user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json(); ",
									"if (body.access_token != undefined){",
									"    pm.environment.set(\"access_token_user1\", body.access_token)",
									"    console.log(pm.environment.get(\"access_token_user1\"))",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"bob@email.com\",\n    \"password\": \"123456789\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						},
						"description": "login user"
					},
					"response": [
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "login user response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"access_token\": \"deserunt Ut\",\n  \"refresh_token\": \"dolore commodo\"\n },\n {\n  \"access_token\": \"in incididunt nostrud\",\n  \"refresh_token\": \"enim Excepteur amet consectetur\"\n }\n]"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/login user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json(); ",
									"if (body.access_token != undefined){",
									"    pm.environment.set(\"access_token_user2\", body.access_token)",
									"    console.log(pm.environment.get(\"access_token_user2\"))",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"alice@email.com\",\n    \"password\": \"123456789\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						},
						"description": "login user"
					},
					"response": [
						{
							"name": "login user response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"access_token\": \"deserunt Ut\",\n  \"refresh_token\": \"dolore commodo\"\n },\n {\n  \"access_token\": \"in incididunt nostrud\",\n  \"refresh_token\": \"enim Excepteur amet consectetur\"\n }\n]"
						},
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<email>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/activate_account user1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmation_link\": \"{{confirmation_user1}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/activate_account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"activate_account"
							]
						},
						"description": "activate user account"
					},
					"response": [
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "not exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/activate_account user2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"confirmation_link\": \"{{confirmation_user2}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/activate_account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"activate_account"
							]
						},
						"description": "activate user account"
					},
					"response": [
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "not exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "ok",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"confirmation_link\": \"<uuid>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/activate_account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"activate_account"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/profile/:id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_user1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/profile/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"profile",
								"2"
							]
						},
						"description": "login user"
					},
					"response": [
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/profile/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"profile",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/profile/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"profile",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/profile/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"profile",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/profile/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"profile",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error unauthenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/profile/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"profile",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "login user response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/profile/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"profile",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"email\": \"XSLNb4@AfOMcFf.fyfs\",\n \"first_name\": \"Excepteur id ipsum cillum nisi\",\n \"last_name\": \"amet Excepteur\",\n \"role\": \"incid\",\n \"is_active\": true,\n \"created_at\": \"2012-04-20\"\n}"
						}
					]
				},
				{
					"name": "/account/wallets user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json(); ",
									"if (body != undefined){",
									"    pm.environment.set(\"sender_address\", body[0].address)",
									"    pm.environment.set(\"currency\", body[0].currency)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_user1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/wallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"wallets"
							]
						},
						"description": "list user wallets"
					},
					"response": [
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "list user wallets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -4659490,\n  \"user_id\": -34717402,\n  \"amount\": -86567739,\n  \"currency\": \"dolor consequat est\",\n  \"address\": \"irure pariatur id\"\n },\n {\n  \"id\": 4418913,\n  \"user_id\": -7300023,\n  \"amount\": 61695150,\n  \"currency\": \"mollit dolore labore\",\n  \"address\": \"nostrud Duis aliquip minim quis\"\n }\n]"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error unauthenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "not exists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/wallets user2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let body = pm.response.json(); ",
									"if (body != undefined){",
									"    pm.environment.set(\"receipient_address\", body[0].address)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_user2}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/wallets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"wallets"
							]
						},
						"description": "list user wallets"
					},
					"response": [
						{
							"name": "return error unauthenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "list user wallets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": -4659490,\n  \"user_id\": -34717402,\n  \"amount\": -86567739,\n  \"currency\": \"dolor consequat est\",\n  \"address\": \"irure pariatur id\"\n },\n {\n  \"id\": 4418913,\n  \"user_id\": -7300023,\n  \"amount\": 61695150,\n  \"currency\": \"mollit dolore labore\",\n  \"address\": \"nostrud Duis aliquip minim quis\"\n }\n]"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "not exists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/wallets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"wallets"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/send_money user1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_user1}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 10,\n    \"currency\": \"{{currency}}\",\n    \"sender_address\": \"{{sender_address}}\",\n    \"recipient_address\": \"{{receipient_address}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/account/send_money",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"send_money"
							]
						},
						"description": "send money from wallet to wallet"
					},
					"response": [
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<float>\",\n    \"currency\": \"<string>\",\n    \"sender_address\": \"<string>\",\n    \"recipient_address\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/send_money",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"send_money"
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<float>\",\n    \"currency\": \"<string>\",\n    \"sender_address\": \"<string>\",\n    \"recipient_address\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/send_money",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"send_money"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error unauthenticated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<float>\",\n    \"currency\": \"<string>\",\n    \"sender_address\": \"<string>\",\n    \"recipient_address\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/send_money",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"send_money"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<float>\",\n    \"currency\": \"<string>\",\n    \"sender_address\": \"<string>\",\n    \"recipient_address\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/send_money",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"send_money"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "send money from wallet to wallet",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<float>\",\n    \"currency\": \"<string>\",\n    \"sender_address\": \"<string>\",\n    \"recipient_address\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/send_money",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"send_money"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 8953694,\n \"commision\": -2400958,\n \"amount\": -71038992,\n \"currency\": \"veniam ipsum\",\n \"sender_address\": \"ullamco nulla Excepteur deserunt\",\n \"recipient_address\": \"dolor dolor\",\n \"created_at\": \"2015-11-08\"\n}"
						},
						{
							"name": "not exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<float>\",\n    \"currency\": \"<string>\",\n    \"sender_address\": \"<string>\",\n    \"recipient_address\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/send_money",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"send_money"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"amount\": \"<float>\",\n    \"currency\": \"<string>\",\n    \"sender_address\": \"<string>\",\n    \"recipient_address\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/account/send_money",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"send_money"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/transactions user1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_user1}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/transactions?page=1&items=25&address={{sender_address}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"transactions"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "items",
									"value": "25"
								},
								{
									"key": "address",
									"value": "{{sender_address}}",
									"description": "(Required) "
								},
								{
									"key": "from_date",
									"value": "<date>",
									"disabled": true
								},
								{
									"key": "to_date",
									"value": "<date>",
									"disabled": true
								}
							]
						},
						"description": "list wallet transactions"
					},
					"response": [
						{
							"name": "return error unauthenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "list wallet transactions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 23998299,\n  \"commision\": -88555426,\n  \"amount\": 63383505,\n  \"currency\": \"irure magna\",\n  \"sender_address\": \"ut commodo eiusmod des\",\n  \"recipient_address\": \"ea sit labore commod\",\n  \"created_at\": \"1949-12-13\"\n },\n {\n  \"id\": -56010538,\n  \"commision\": -89501067,\n  \"amount\": 46098347,\n  \"currency\": \"minim sint\",\n  \"sender_address\": \"id fugiat dolore cupidatat reprehenderit\",\n  \"recipient_address\": \"reprehenderit dolor non\",\n  \"created_at\": \"1988-05-12\"\n }\n]"
						},
						{
							"name": "return error forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/transactions user2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_user2}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/transactions?page=1&items=25&address={{receipient_address}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"transactions"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "items",
									"value": "25"
								},
								{
									"key": "address",
									"value": "{{receipient_address}}",
									"description": "(Required) "
								},
								{
									"key": "from_date",
									"value": "<date>",
									"disabled": true
								},
								{
									"key": "to_date",
									"value": "<date>",
									"disabled": true
								}
							]
						},
						"description": "list wallet transactions"
					},
					"response": [
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "list wallet transactions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 23998299,\n  \"commision\": -88555426,\n  \"amount\": 63383505,\n  \"currency\": \"irure magna\",\n  \"sender_address\": \"ut commodo eiusmod des\",\n  \"recipient_address\": \"ea sit labore commod\",\n  \"created_at\": \"1949-12-13\"\n },\n {\n  \"id\": -56010538,\n  \"commision\": -89501067,\n  \"amount\": 46098347,\n  \"currency\": \"minim sint\",\n  \"sender_address\": \"id fugiat dolore cupidatat reprehenderit\",\n  \"recipient_address\": \"reprehenderit dolor non\",\n  \"created_at\": \"1988-05-12\"\n }\n]"
						},
						{
							"name": "return error service not available",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error unauthenticated",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return error bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/transactions?page=<integer>&items=<integer>&address=<string>&from_date=<date>&to_date=<date>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"transactions"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "items",
											"value": "<integer>"
										},
										{
											"key": "address",
											"value": "<string>"
										},
										{
											"key": "from_date",
											"value": "<date>"
										},
										{
											"key": "to_date",
											"value": "<date>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/account/healthy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/account/healthy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"account",
								"healthy"
							]
						},
						"description": "check if service is healthy"
					},
					"response": [
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/healthy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"healthy"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "healthy",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/account/healthy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"healthy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "notify",
			"item": [
				{
					"name": "/notify/healthy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notify/healthy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notify",
								"healthy"
							]
						},
						"description": "check if service is healthy"
					},
					"response": [
						{
							"name": "healthy",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notify/healthy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notify",
										"healthy"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notify/healthy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notify",
										"healthy"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "/notify/ws",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notify/ws",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notify",
								"ws"
							]
						},
						"description": "upgrade to websocket connection"
					},
					"response": [
						{
							"name": "upgraded required",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notify/ws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notify",
										"ws"
									]
								}
							},
							"status": "Upgrade Required (RFC 2817)",
							"code": 426,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "return internal error server",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notify/ws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notify",
										"ws"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"magna adipisicing reprehenderit\"\n}"
						},
						{
							"name": "connection upgraded",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notify/ws",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notify",
										"ws"
									]
								}
							},
							"status": "Switching Protocols",
							"code": 101,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://cryptoapp.com"
		}
	]
}